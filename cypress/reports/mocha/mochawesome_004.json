{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 1,
    "pending": 0,
    "failures": 2,
    "start": "2022-12-03T03:29:38.361Z",
    "end": "2022-12-03T03:39:15.563Z",
    "duration": 577202,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ef0f8525-3c73-4644-b55b-9ea838955cc4",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\testcases\\chooseASponsorship.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\testcases\\chooseASponsorship.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "386fb91e-3f02-4a41-8352-0b29c6c16d34",
          "title": "Verify Choose a sponsorship flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "setup mailbox inbox",
              "fullTitle": "Verify Choose a sponsorship flow setup mailbox inbox",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile('./data/mailbox.json', {\n  timeout: 2000\n}).then(inbox => {\n  hasMailbox = inbox.hasMailbox;\n  if (hasMailbox == -1) randomEmail = (0, _generalFunction.getRandomEmail)();else if (hasMailbox != 1) {\n    console.log(\"hasMailbox: \" + hasMailbox);\n    cy.createInbox().then(newInbox => {\n      console.log('Test message'); // verify a new inbox was created\n      assert.isDefined(newInbox);\n      console.log(\"inbox id: \" + newInbox.id);\n      console.log(\"inbox.emailAddress: \" + newInbox.emailAddress);\n      cy.writeFile('./data/mailbox.json', {\n        inboxId: newInbox.id,\n        emailAddress: newInbox.emailAddress,\n        hasMailbox: 1\n      });\n      inboxId = newInbox.id;\n      randomEmail = newInbox.emailAddress;\n    });\n  } else {\n    inboxId = inbox.inboxId;\n    randomEmail = inbox.emailAddress;\n  }\n});",
              "err": {},
              "uuid": "baf24b47-829a-4fd1-bcd6-0473517c3465",
              "parentUUID": "386fb91e-3f02-4a41-8352-0b29c6c16d34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify information when Choose a sponsorship",
              "fullTitle": "Verify Choose a sponsorship flow Verify information when Choose a sponsorship",
              "timedOut": null,
              "duration": 95568,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"screenshots/chooseASponsorship.cy.js/Verify Choose a sponsorship flow -- Verify information when Choose a sponsorship (failed).png\",\n  \"videos/chooseASponsorship.cy.js.mp4\"\n]",
              "code": "cy.visit(infors.url);\nif (hasMailbox == 1) cy.emptyInbox(inboxId);\nlet randomName = (0, _generalFunction.getRandomText)();\nlet randomLastName = (0, _generalFunction.getRandomText)(); //let randomEmail = getRandomEmail();\nconsole.log(\"randomEmail:\" + randomEmail);\nlet randomPhone = (0, _generalFunction.getRandomNumber)();\nhomePage.clickChooseASponsorshipButton();\nsponsorshipPage.clickSponsorItem(infors.sponsorItemName);\nsponsorshipPage.selectPersonReceiveCredit(infors.personRecieveCredit);\nsponsorshipPage.clickButtonNext();\ndonationsAddressPage.inputAddressInfor(randomName, randomLastName, randomEmail, randomPhone, user.company, user.address1, user.address2, user.city, user.state, user.zip);\ndonationsAddressPage.clickNextButton();\ndonationsPaymentPage.verifyPaymentPage();\ndonationsPaymentPage.inputCreditCardTicket(infors.creditCardNumber, infors.creditCardVCV);\ndonationsPaymentPage.clickPurchase();\ndonationsPaymentPage.verifyTransactionFinish();\nif (hasMailbox == 1) mailbox.verifyMailboxGetEmailSponsorshipSuccess(inboxId);\nloginManagePage.visit(infors.urlManage + 'events/' + infors.idProject + '/transactions');\ntransactionManagePage.verifyTransactionIsCreated('Sponsorship', randomName, randomLastName, randomEmail, '$501.00', 'grouest');",
              "err": {
                "message": "AssertionError: Timed out retrying after 60000ms: Expected to find content: 'ABC DEF' within the element: <ul.available-items> but never did.",
                "estack": "AssertionError: Timed out retrying after 60000ms: Expected to find content: 'ABC DEF' within the element: <ul.available-items> but never did.\n    at SponsorshipPage.selectPersonReceiveCredit (webpack:///./cypress/e2e/1-getting-started/Pages/sponsorshipPage.ts:60:33)\n    at Context.eval (webpack:///./cypress/e2e/1-getting-started/testcases/chooseASponsorship.cy.js:60:24)",
                "diff": null
              },
              "uuid": "b2da7f07-3afb-43ee-be67-d3eac8de4b3e",
              "parentUUID": "386fb91e-3f02-4a41-8352-0b29c6c16d34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify previous button in Choose a sponsorship",
              "fullTitle": "Verify Choose a sponsorship flow Verify previous button in Choose a sponsorship",
              "timedOut": null,
              "duration": 95168,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"screenshots/chooseASponsorship.cy.js/Verify Choose a sponsorship flow -- Verify previous button in Choose a sponsorship (failed).png\",\n  \"videos/chooseASponsorship.cy.js.mp4\"\n]",
              "code": "cy.forceVisit(infors.url);\nlet randomName = (0, _generalFunction.getRandomText)();\nlet randomLastName = (0, _generalFunction.getRandomText)();\nlet randomEmail = (0, _generalFunction.getRandomEmail)();\nlet randomPhone = (0, _generalFunction.getRandomNumber)();\nhomePage.clickChooseASponsorshipButton();\nsponsorshipPage.clickSponsorItem(infors.sponsorItemName);\nsponsorshipPage.selectPersonReceiveCredit(infors.personRecieveCredit);\nsponsorshipPage.clickButtonNext();\ndonationsAddressPage.inputAddressInfor(randomName, randomLastName, randomEmail, randomPhone, user.company, user.address1, user.address2, user.city, user.state, user.zip);\ndonationsAddressPage.clickNextButton();\ndonationsPaymentPage.verifyPaymentPage();\ndonationsPaymentPage.inputCreditCardTicket(infors.creditCardNumber, infors.creditCardVCV); //start script to verify previous button\ndonationsPaymentPage.clickPreviousButton();\ndonationsAddressPage.verifyAddressInforPage();\ndonationsAddressPage.clickPreviousButton();\nsponsorshipPage.verifySponsershipPage();\nsponsorshipPage.clickButtonNext();\ndonationsAddressPage.clickNextButton(); //end script to verify previous button",
              "err": {
                "message": "AssertionError: Timed out retrying after 60000ms: Expected to find content: 'ABC DEF' within the element: <ul.available-items> but never did.",
                "estack": "AssertionError: Timed out retrying after 60000ms: Expected to find content: 'ABC DEF' within the element: <ul.available-items> but never did.\n    at SponsorshipPage.selectPersonReceiveCredit (webpack:///./cypress/e2e/1-getting-started/Pages/sponsorshipPage.ts:60:33)\n    at Context.eval (webpack:///./cypress/e2e/1-getting-started/testcases/chooseASponsorship.cy.js:86:24)",
                "diff": null
              },
              "uuid": "2e0c27f1-4788-412a-9545-336fe8e075d0",
              "parentUUID": "386fb91e-3f02-4a41-8352-0b29c6c16d34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "baf24b47-829a-4fd1-bcd6-0473517c3465"
          ],
          "failures": [
            "b2da7f07-3afb-43ee-be67-d3eac8de4b3e",
            "2e0c27f1-4788-412a-9545-336fe8e075d0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 190768,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "reportPageTitle": "Cypress Tests"
      },
      "version": "6.2.0"
    }
  }
}